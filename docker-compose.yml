version: "3.7"

networks:
  default:
    attachable: true
    ipam:
      config:
        - subnet: 10.1.1.0/24

services:
  gateway:
    image: $COMPOSE_REGISTRY_PREFIX-gateway:$COMPOSE_VERSION
    build: gateway
    ports:
      - 80:80
      - 1080:1080
    networks:
      default:
        aliases:
          - portainer.internal
          - proxy.internal
          - registry.internal
    restart: always

  portainer_agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - default
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce
    ports:
      - 9007:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $COMPOSE_DATADIR/portainer:/data
    restart: always

  registry:
    image: registry
    ports:
      - 9008:5000
    restart: always
    volumes:
      - $COMPOSE_DATADIR/registry:/var/lib/registry

  registry_frontend:
    image: konradkleine/docker-registry-frontend:v2
    ports:
      - 9009:80
    environment:
      - ENV_DOCKER_REGISTRY_HOST=registry
      - ENV_DOCKER_REGISTRY_PORT=5000
    restart: always

  # gitlab:
  #   image: gitlab/gitlab-ce:latest
  #   ports:
  #     - "9010:22"
  #     - "9011:80"
  #     - "9012:443"
  #   volumes:
  #     - $COMPOSE_DATADIR/gitlab/data:/var/opt/gitlab
  #     - $COMPOSE_DATADIR/gitlab/logs:/var/log/gitlab
  #     - $COMPOSE_DATADIR/gitlab/config:/etc/gitlab
  #   environment:
  #     GITLAB_OMNIBUS_CONFIG: "from_file('/omnibus_config.rb')"
  #   configs:
  #     - source: gitlab
  #       target: /omnibus_config.rb
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 10m
  #   secrets:
  #     - gitlab_root_password
  #   networks:
  #     default:
  #       aliases:
  #         - gitlab.internal
  #         - ui.gitlab.internal

  # gitlab-runner:
  #   image: gitlab/gitlab-runner:alpine
  #   deploy:
  #     mode: replicated
  #     replicas: 1

  # mssql:
  #   image: mcr.microsoft.com/mssql/server:2019-CU8-ubuntu-16.04
  #   environment:
  #     ACCEPT_EULA: "Y"
  #     SA_PASSWORD: "QWER1234!!!!"
  #   ports:
  #     - 9013:1433
  #   volumes:
  #     - $COMPOSE_DATADIR/mssql:/var/opt/mssql
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 10m
  #   networks:
  #     default:
  #       aliases:
  #         - mssql.internal

  # mysql:
  #   image: mysql
  #   command: --default-authentication-plugin=mysql_native_password --lower-case-table-names=1
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "qwer1234!!!!"
  #   volumes:
  #     - $COMPOSE_DATADIR/mysql:/var/lib/mysql
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 10m

  redis:
    image: redis
    volumes:
      - $COMPOSE_DATADIR/redis/single:/data
    entrypoint: redis-server
    command: ["--appendonly", "yes"]
    ports:
      - 6379:6379
    networks:
      default:
        aliases:
          - redis.internal

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - $COMPOSE_DATADIR/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10m

configs:
  gitlab:
    file: ./gitlab/gitlab.rb
secrets:
  gitlab_root_password:
    file: ./gitlab/root_password.txt
